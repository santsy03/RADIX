***************
*** 48,64 ****
          print error
          raise e
      else:
-         try:
-             free_minutes = int(resources['parameters']['free_minutes'])
-         except ValueError, err:
-             print str(err) + "not an 'int' - changed to a 'float'"
-             free_minutes  = float(free_minutes)
-         free_minutes = free_minutes/60
          total_sms_available = resources['parameters']['total_sms_available']
          gprs_discount_available = resources['parameters']['gprs_discount_available']
-         response = response.substitute(free_minutes=free_minutes,total_sms_available=total_sms_available,gprs_discount_available=gprs_discount_available)
-         print "response ::: %s"%(str(response))
-         return response
  
  def processCreditLimitCheck(resources):
      '''checks and returns a subscriber's credit limit'''
--- 46,59 ----
          print error
          raise e
      else:
+         free_minutes = resources['parameters']['free_minutes']
          total_sms_available = resources['parameters']['total_sms_available']
          gprs_discount_available = resources['parameters']['gprs_discount_available']
+         from string import Template
+         from ussd.services.postpaid.sms_minutes_balance.config import responses
+         response = Template(responses[language])
+         print "response ::: %s"%(str(response.substitute(free_minutes=free_minutes,total_sms_available=total_sms_available,gprs_discount_available=gprs_discount_available)))
+         return response.substitute(free_minutes=free_minutes,total_sms_available=total_sms_available,gprs_discount_available=gprs_discount_available)
  
  def processCreditLimitCheck(resources):
      '''checks and returns a subscriber's credit limit'''
